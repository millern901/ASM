{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red196\green26\blue22;
\red28\green0\blue207;\red0\green116\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c0\c45600\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 .section .data
\f1 \cf0 \

\f0 \cf2 input_prompt: .asciz \cf4 "Enter a String: "
\f1 \cf0 \

\f0 \cf2 output_prompt: .asciz \cf4 "Your String is: "
\f1 \cf0 \
\

\f0 \cf2 string_specifier: .asciz \cf4 "%s"
\f1 \cf0 \

\f0 \cf2 ws_string_specifier: .asciz \cf4 "%[^\\n]"
\f1 \cf0 \

\f0 \cf2 flush: .asciz \cf4 "\\n"
\f1 \cf0 \
\

\f0 \cf2 string_input: .space \cf5 100
\f1 \cf0 \
\
\

\f0 \cf2 .section .text
\f1 \cf0 \

\f0 \cf2 .global main
\f1 \cf0 \
\

\f0 \cf6 // Main
\f1 \cf0 \

\f0 \cf2 main:
\f1 \cf0 \

\f0 \cf2     \cf6 // Input prompt
\f1 \cf0 \

\f0 \cf2     ldr x0, =input_prompt
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \

\f0 \cf2     ldr x0, =flush
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Scan for input
\f1 \cf0 \

\f0 \cf2     ldr x0, =ws_string_specifier
\f1 \cf0 \

\f0 \cf2     ldr x1, =string_input
\f1 \cf0 \

\f0 \cf2     bl scanf
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Load input string address
\f1 \cf0 \

\f0 \cf2     ldr x0, =string_input
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Load 'x'
\f1 \cf0 \

\f0 \cf2     mov w2, \cf6 #120
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Call the subroutine
\f1 \cf0 \

\f0 \cf2     b switch_x_loop
\f1 \cf0 \
\

\f0 \cf6 // End
\f1 \cf0 \

\f0 \cf2 end:
\f1 \cf0 \

\f0 \cf2     mov x0, \cf6 #0
\f1 \cf0 \

\f0 \cf2     mov x8, \cf6 #93
\f1 \cf0 \

\f0 \cf2     svc \cf6 #0
\f1 \cf0 \
\
\

\f0 \cf6 // String alteration subroutine
\f1 \cf0 \

\f0 \cf2 switch_x_loop:
\f1 \cf0 \

\f0 \cf2     \cf6 // load the current character
\f1 \cf0 \

\f0 \cf2     ldrb w1, [x0]
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Compare character to end case
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #0
\f1 \cf0 \

\f0 \cf2     beq print
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Branch to the switch statement
\f1 \cf0 \

\f0 \cf2     bl switch_x
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Increment the string pointer
\f1 \cf0 \

\f0 \cf2     add x0, x0, \cf6 #1
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Recall string_x
\f1 \cf0 \

\f0 \cf2     b switch_x_loop
\f1 \cf0 \
\
\

\f0 \cf6 // switch statement to check for x
\f1 \cf0 \

\f0 \cf2 switch_x:
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #65
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #97
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \
\

\f0 \cf2     cmp w1, \cf6 #69
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #101
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \
\

\f0 \cf2     cmp w1, \cf6 #73
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #105
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \
\

\f0 \cf2     cmp w1, \cf6 #79
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #111
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \
\

\f0 \cf2     cmp w1, \cf6 #85
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \

\f0 \cf2     cmp w1, \cf6 #117
\f1 \cf0 \

\f0 \cf2     beq swap
\f1 \cf0 \
\

\f0 \cf2     br x30
\f1 \cf0 \
\
\

\f0 \cf6 // Swap x into current memory location
\f1 \cf0 \

\f0 \cf2 swap:
\f1 \cf0 \

\f0 \cf2     strb w2, [x0]
\f1 \cf0 \

\f0 \cf2     br x30
\f1 \cf0 \
\
\

\f0 \cf6 // Print subrountine
\f1 \cf0 \

\f0 \cf2 print:
\f1 \cf0 \

\f0 \cf2     \cf6 // Print output prompt
\f1 \cf0 \

\f0 \cf2     ldr x0, =output_prompt
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \

\f0 \cf2     ldr x0, =flush
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \
\

\f0 \cf2     \cf6 // Print output
\f1 \cf0 \

\f0 \cf2     ldr x0, =string_specifier
\f1 \cf0 \

\f0 \cf2     ldr x1, =string_input
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \

\f0 \cf2     ldr x0, =flush
\f1 \cf0 \

\f0 \cf2     bl printf
\f1 \cf0 \
\

\f0 \cf2     b end
\f1 \cf0 \
}